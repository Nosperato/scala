.\" ##########################################################################
.\" #                      __                                                #
.\" #      ________ ___   / /  ___     Scala On-line Manual Pages            #
.\" #     / __/ __// _ | / /  / _ |    (c) 2002-2005, LAMP/EPFL              #
.\" #   __\ \/ /__/ __ |/ /__/ __ |                                          #
.\" #  /____/\___/_/ |_/____/_/ | |    http://scala.epfl.ch/                 #
.\" #                           |/                                           #
.\" ##########################################################################
.\"
.\" Process this file with nroff -man scala.1
.\"
.TH scala 1  "April 29, 2005" "version 0.1" "USER COMMANDS"
.\"
.\" ################################# NAME ###################################
.\"
.SH NAME
scala \- Launcher for the Scala language
.\"
.\" ############################### SYNOPSIS #################################
.\"
.SH SYNOPSIS
\fBscala\fR [ <\fIoptions\fR> ] <\fIclass file\fR> [ <\fIargs\fR> ]
.\"
.\" ############################### PARAMETERS ###############################
.\"
.SH PARAMETERS
.TP
<\fIoptions\fR>
Command line options. See \fBOPTIONS\fR below.
.TP
<\fIclass file\fR>
Name of the class to be invoked.
.TP
<\fIargs\fR>
Program arguments passed to the main function.
.\"
.\" ############################## DESCRIPTION ###############################
.\"
.SH DESCRIPTION
The \fBscala\fR utility launches a Scala application. It does this by starting
a Java runtime environment, loading a specified class, and invoking that
classâ€™s \fBmain\fR method. The method must have the following signature:
.PP
          \fBdef\fR main(args: Array[String]): Unit
.PP
The method must not return any value, and it must accept a String array as a
parameter. By default, the first non-option argument is the name of the class
to be invoked. A fully-qualified class name should be used.
.PP
The Scala runtime searches for the startup class, and other classes used, in
three sets of locations: the bootstrap class path, the installed extensions,
and the user class path.
.\"
.\" ############################### OPTIONS ##################################
.\"
.SH OPTIONS
The launcher has a set of standard options that are supported on the current
runtime environment and will be supported in future releases. An additional
set of non-standard options are specific to the current virtual machine
implementation and are subject to change in the future. Non-standard options
begin with \fB-X\fR.
.TP
\fB\-classpath\fR <\fIpath\fR>
Specify where to find user class files (on Unix-based systems a
colon-separated list of paths, on Windows-based systems, a semicolon-separate
list of paths).
.\"
.\" ############################### EXAMPLES #################################
.\"
.SH EXAMPLES
.TP
Execute a Scala program generated in the current directory
\fBscala\fR HelloWorld
.PP
.TP
Execute a Scala program generated in a user-defined directory \fBclasses\fR
\fBscala\fR \-classpath classes hello.HelloWorld
.PP
.\"
.\" ############################# EXIT STATUS ################################
.\"
.SH "EXIT STATUS"
\fBscala\fR returns a zero exist status if it succeeds. Non zero is returned
in case of failure.
.\"
.\" ############################## AUTHOR(S) #################################
.\"
.SH AUTHOR
Written by Stephane Micheloud.
.\"
.\" ################################ BUGS ####################################
.\"
.SH "REPORTING BUGS"
Report bugs to <scala@lists.epfl.ch>.
.\"
.\" ############################# COPYRIGHT ##################################
.\"
.SH COPYRIGHT
Copyright \(co 2002-2005 LAMP/EPFL
.PP
This is free software; see the distribution for copying conditions.  There is
NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
.\"
.\" ############################### SEE ALSO #################################
.\"
.SH "SEE ALSO"
.BR scalac(1),
.BR scalaint(1),
.BR scalarun(1)
.\"
.\" ##########################################################################
.\" $Id$
