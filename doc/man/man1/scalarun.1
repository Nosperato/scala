.\" ##########################################################################
.\" #                      __                                                #
.\" #      ________ ___   / /  ___     Scala On-line Manual Pages            #
.\" #     / __/ __// _ | / /  / _ |    (c) 2002-2005, LAMP/EPFL              #
.\" #   __\ \/ /__/ __ |/ /__/ __ |                                          #
.\" #  /____/\___/_/ |_/____/_/ | |    http://scala.epfl.ch/                 #
.\" #                           |/                                           #
.\" ##########################################################################
.\"
.\" Process this file with nroff -man scalarun.1
.\"
.TH scalarun 1  "April 29, 2005" "version 0.1" "USER COMMANDS"
.\"
.\" ################################# NAME ###################################
.\"
.SH NAME
scalarun \- Non-interactive interpreter for the Scala language
.\"
.\" ############################### SYNOPSIS #################################
.\"
.SH SYNOPSIS
\fBscalarun\fR [ <\fIoptions\fR> ] <\fIsource files\fR> [ -- <\fImodule\fR> [ <\fIargs\fR> ] ]
.\"
.\" ############################### PARAMETERS ###############################
.\"
.SH PARAMETERS
.TP
<\fIoptions\fR>
Command line options. See \fBOPTIONS\fR below.
.TP
<\fIsource files\fR>
One or more source files to be interpreted (such as MyClass.scala).
.TP
<\fImodule\fR>
Name of the Scala object containing the main function.
.TP
<\fIargs\fR>
Program arguments passed to the main function.
.\"
.\" ############################## DESCRIPTION ###############################
.\"
.SH DESCRIPTION
The \fBscalarun\fR utility interpretes a Scala application. It does this by
loading the class <\fImodule\fR> and invoking that classâ€™s \fBmain\fR method.
The method must have the following signature:
.PP
          \fBdef\fR main(args: Array[String]): Unit
.PP
The method must not return any value, and it must accept a String array as a
parameter.
.PP
The Scala interpreter searches for the startup class, and other classes used,
in three sets of locations: the bootstrap class path, the installed
extensions, and the user class path.
.\"
.\" ############################### OPTIONS ##################################
.\"
.SH OPTIONS
The \fBscalarun\fR command supports the following options
.TP
\fB\-c\fR <\fIstring\fR>
Evaluate <\fIstring\fR> and print result.
.TP
\fB\-classpath\fR <\fIpath\fR>
Specify where to find user class files (on Unix-based systems
a colon-separated list of paths, on Windows-based systems, a
semicolon-separate list of paths).
.TP
\fB\-nologo\fR
Print no logo at interactive interpreter start.
.TP
\fB\-emacs\fR
Use Emacs editing mode.
.TP
\fB\-g\fR
Generate debugging info.
.TP
\fB\-nowarn\fR
Generate no warnings.
.\"
.\" ############################### EXAMPLES #################################
.\"
.SH EXAMPLES
.TP
Run a Scala program located in the current directory
\fBscalarun\fR HelloWorld.scala -- HelloWord
.PP
.\"
.\" ############################# EXIT STATUS ################################
.\"
.SH "EXIT STATUS"
\fBscalarun\fR returns a zero exist status if it succeeds. Non zero is
returned in case of failure.
.\"
.\" ############################## AUTHOR(S) #################################
.\"
.SH AUTHOR
Written by Stephane Micheloud.
.\"
.\" ################################ BUGS ####################################
.\"
.SH "REPORTING BUGS"
Report bugs to <scala@lists.epfl.ch>.
.\"
.\" ############################# COPYRIGHT ##################################
.\"
.SH COPYRIGHT
Copyright \(co 2002-2005 LAMP/EPFL
.PP
This is free software; see the distribution for copying conditions.  There is
NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
.\"
.\" ############################### SEE ALSO #################################
.\"
.SH "SEE ALSO"
.BR scala(1),
.BR scalac(1),
.BR scalaint(1)

