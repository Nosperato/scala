################################################################################
# DEFAULT PROPERTIES FOR SABBUS                                                #
################################################################################
# These are default values for all properties used by SABBUS. DO NOT CHANGE them
# in this file. All properties can be overriden in the
# build.USER_NAME.properties file.
# $Id$
################################################################################

# CONFIGURATION OF NSC
################################################################################

# What NSC should output during compilation. Either 'none', 'verbose', 'debug'.
nsc.logging=none

# After which compile phase NSC should stop. This will induce build errors.
nsc.stop=

# A comma-separated list of compile phases that NSC should skip.
nsc.skip=

# A comma-separated list of compile phases which result should be checked for
# consistency.
nsc.check=

# The name of a file that lists files that should be excluded when building
# the new Scala library. This file MUST EXIST.
nsc.nslib.excludes=${build.support.dir}/nsc.nslib.excludes

# The name of a file that lists files that should be excluded when building
# the new Scala tools. This file MUST EXIST.
nsc.nstools.excludes=${build.support.dir}/nsc.nstools.excludes

# The name of a file that lists files that should be excluded when building
# the new Scala tools. This file MUST EXIST.
nsc.osc-nstools.excludes=${build.support.dir}/nsc.osc-nstools.excludes

# LOCATION OF PRE-COMPILED LIBRARIES
################################################################################

# The path to the old Scala library ('scala.jar').
oslib.jar=/usr/local/lib/scala.jar

# The path to the old Scala library sources.
oslib.src=/usr/local/share/scala/src

# The path to the old Scala tools ('tools.jar').
ostools.jar=/usr/local/lib/tools.jar

# The path to the JaCo compiler ('jaco.jar).
jaco.jar=/usr/local/lib/jaco.jar

# The path to the FJBG byte-code generation library ('fjbg.jar').
fjbg.jar=/usr/local/lib/fjbg.jar

# The path to the MSIL byte-code generation library ('fjbg.jar').
msil.jar=/usr/local/lib/msil.jar

# The path to the MSIL DLL library ('scala.dll').
scala.dll=/usr/local/lib/scala.dll

# The path to the Java base classes ('rt.jar' or 'classes.jar').
java.jar=${java.home}/jre/lib/rt.jar

# The path to the Ant base classes ('ant.jar').
ant.jar=${ant.home}/lib/ant.jar

# LOCATION OF BUILD PRODUCTS
################################################################################

# The directory in which all build products live.
build.dir=${basedir}/build

# The directory to which the new Scala library is compiled.
build.nslib.dir=${build.dir}/nslib

# The directory to which the new Scala tools (built with OSC) are compiled.
build.osc-nstools.dir=${build.dir}/osc-nstools

# The directory to which the new Scala tools are compiled.
build.nstools.dir=${build.dir}/nstools

# LOCATION AND STRUCTURE OF THE DISTRIBUTION
# Overriding these properties will produce a non-standard distribution that
# might not be useable.
################################################################################

# The directory to which a new distribution will be added.
distrib.dir=${basedir}/distribs

# The prefix of the directory in which a distribution will reside. This will be
# completed by the date of the distribution.
distrib.current.prefix=nscala

# The JAR file in which the new Scala library should be archived.
distrib.nslib.jar=nslib.jar

# The JAR file in which the new Scala tools should be archived.
distrib.nstools.jar=nstools.jar

# The JAR file in which the new Scala tools (built with OSC) should be archived.
distrib.osc-nstools.jar=osc-nstools.jar

